
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the theme object.
$moje-telly-proto-theme: mat.define-theme((
  color: (
    theme-type: light,
    primary: mat.$azure-palette,
    tertiary: mat.$blue-palette,
  ),
  density: (
    scale: 0,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
:root {
  @include mat.all-component-themes($moje-telly-proto-theme);
}

// Comment out the line below if you want to use the pre-defined typography utility classes.
// For more information: https://material.angular.io/guide/typography#using-typography-styles-in-your-application.
// @include mat.typography-hierarchy($moje-telly-proto-theme);

// Comment out the line below if you want to use the deprecated `color` inputs.
// @include mat.color-variants-backwards-compatibility($moje-telly-proto-theme);
/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; overflow-x: hidden;}
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

.app-background {
  position: fixed;  /* Keep it fixed so it remains as the background while scrolling */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url('./app/assets/light.svg');
  background-size: cover;
  background-position: center;
  z-index: -1;  /* Ensures the background stays behind the content */
  pointer-events: none;  /* Ensures the background doesn't interfere with content interactions */
}

.app-content {
  position: relative;
  z-index: 1;  /* Ensures content appears above the background */
  padding-bottom: 100px; /* Optional: to avoid content hitting the bottom of the page */
}

.app-gradient-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, #1E1EC8 0%, #4141EA 100%);
  opacity: 0.3;  /* Adjust opacity to make animation underneath visible */
  z-index: -1;  /* Keeps it in front of the SVG but behind the content */
}